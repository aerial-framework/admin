<?xml version="1.0" encoding="utf-8"?>
<mx:WindowedApplication xmlns:mx="http://www.adobe.com/2006/mxml" layout="vertical" xmlns:pages="pages.*"
			applicationComplete="init()" width="800" height="600" showStatusBar="false" verticalGap="0" horizontalAlign="right"
			xmlns:viewStackEffects="org.efflex.mx.viewStackEffects.*" xmlns:pairViewStackEffects="org.efflex.mx.pairViewStackEffects.*"
			xmlns:code="http://code.google.com/p/flexlib/">
	
	<mx:HBox width="100%" verticalAlign="middle">
		<mx:Image source="@Embed(source='assets/images/aerial-logo.png')">
			<mx:filters>
				<mx:GlowFilter alpha="0.5" blurX="12" blurY="6" color="#000000" quality="3" strength="3"/>
			</mx:filters>
		</mx:Image>
		
		<mx:Spacer width="100%"/>
		
		<mx:Button icon="@Embed(source='assets/icons/dusseldorf/home-inverted.png')" paddingLeft="8" paddingRight="8"
				   paddingTop="8" paddingBottom="8" toolTip="Home"
				   click="appControl.showPage.dispatch(ApplicationController.HOME)" styleName="buttonOfficial" width="60"/>
		<mx:Button icon="@Embed(source='assets/icons/dusseldorf/current-work-inverted.png')" paddingLeft="8" paddingRight="8"
				   paddingTop="8" paddingBottom="8" styleName="buttonOfficial" width="60"
				   toolTip="Show Projects"
				   click="appControl.projectDirectory = null; appControl.showPage.dispatch(ApplicationController.OPEN_PROJECT)"/>
		<mx:Button icon="@Embed(source='assets/icons/dusseldorf/config-inverted.png')" paddingLeft="8"
				   paddingRight="8" paddingTop="8" paddingBottom="8" styleName="buttonOfficial" width="60"
				   toolTip="Show Config Page" click="appControl.showPage.dispatch(ApplicationController.CONFIG_EDITOR)"/>
		<mx:Button icon="@Embed(source='assets/icons/dusseldorf/collaboration-inverted.png')" paddingLeft="8"
				   paddingRight="8" paddingTop="8" paddingBottom="8" styleName="buttonOfficial" width="60"
				   toolTip="Refresh Page" click="refreshPage()"/>
	</mx:HBox>
	<mx:Spacer height="12"/>
	
	<code:SuperTabBar id="projectBar" horizontalAlign="right" paddingRight="4"
					  itemClick="projectSelected(event)" tabClose="projectCloseHandler(event)"/>
	<mx:Panel width="100%" height="100%" headerHeight="0" paddingTop="12">		
		<mx:ViewStack id="pagesVS" width="100%" height="100%">
			<mx:VBox horizontalAlign="center" verticalAlign="middle" showEffect="{fadeEffect}">
				<mx:HBox horizontalGap="20" verticalAlign="middle">
					<mx:Button icon="@Embed(source='assets/icons/dusseldorf/plus.png')" height="75"
							   labelPlacement="bottom" label="New Project" width="135"
							   click="appControl.showPage.dispatch(ApplicationController.NEW_PROJECT)"/>
					<mx:VRule height="100%"/>
					<mx:Button icon="@Embed(source='assets/icons/dusseldorf/current-work.png')" height="75"
							   labelPlacement="bottom" label="Open Recent Project" width="135"
							   click="appControl.projectDirectory = null; appControl.showPage.dispatch(ApplicationController.OPEN_PROJECT)"/>
					<mx:VRule height="100%"/>
					<mx:Button icon="@Embed(source='assets/icons/dusseldorf/graphic-design.png')" height="75"
							   labelPlacement="bottom" label="Open Project" width="135"
							   click="appControl.showPage.dispatch(ApplicationController.BROWSE_FOR_PROJECT)"/>
				</mx:HBox>
			</mx:VBox>
			<pages:ArchiveView id="newProject" width="100%" height="100%" label="Start a new Project" showEffect="{fadeEffect}"/>
			<pages:ProjectBrowser id="projectBrowser" width="100%" height="100%" label="Manage Installation" showEffect="{fadeEffect}"/>
			<pages:ProjectView id="projectView" width="100%" height="100%" label="Manage Installation" showEffect="{fadeEffect}"/>
			<pages:ConfigEditor id="configEditor" width="100%" height="100%" showEffect="{fadeEffect}"/>
			<pages:CodeGeneration id="codeGeneration" width="100%" height="100%" showEffect="{fadeEffect}"/>
			<pages:BackupAndRestore id="backAndRestore" width="100%" height="100%" showEffect="{fadeEffect}"/>
		</mx:ViewStack>
	</mx:Panel>
	
	<viewStackEffects:Fade id="fadeEffect" duration="500" transparent="true"/>
	
	<mx:Spacer height="6"/>
	
	<mx:HBox width="100%" verticalAlign="middle">
		<mx:LinkButton label="http://aerial-project.org" click="navigateToURL(new URLRequest('http://aerial-project.org'))"
					   buttonMode="true" color="#DDDDDD" paddingLeft="-8" width="150"/>
		<mx:Label width="100%" id="versionStr" textAlign="center" color="#DDDDDD" fontSize="9"/>
		<mx:Spacer width="116"/>
		<mx:Button icon="@Embed(source='assets/icons/dusseldorf/consulting-16.png')" height="25" width="28"/>
	</mx:HBox>
	
	
	<mx:Script>
		<![CDATA[	
			import air.update.ApplicationUpdaterUI;
			import air.update.events.UpdateEvent;
			
			import controllers.ApplicationController;
			
			import flexlib.events.SuperTabEvent;
			
			import interfaces.IRefreshable;
			
			import org.aerial.rpc.message.AerialErrorMessage;			AerialErrorMessage;
			
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			import mx.events.ItemClickEvent;
			import mx.utils.ObjectUtil;
			
			private var appControl:ApplicationController = ApplicationController.instance;
			
			private var appUpdater:ApplicationUpdaterUI = new ApplicationUpdaterUI();
			private var showingDialog:Boolean = false;
			
			private function init():void
			{
				setApplicationVersion();

				appUpdater.updateURL = "http://aerial-project.org/app-version.xml";
				appUpdater.addEventListener(UpdateEvent.INITIALIZED, onUpdate);
				appUpdater.addEventListener(ErrorEvent.ERROR, onError);				
				
				appUpdater.isCheckForUpdateVisible = false;
				appUpdater.isFileUpdateVisible = false;
				appUpdater.isInstallUpdateVisible = false;
				
				appUpdater.initialize();
				
				appControl.showPage.add(showPageHandler);
				appControl.projectSelected.add(projectSelectionHandler);
				
				nativeApplication.addEventListener(KeyboardEvent.KEY_UP, keyHandler);
			}

			private function keyHandler(event:KeyboardEvent):void
			{
				if((event.ctrlKey && event.keyCode == Keyboard.R) || event.keyCode == Keyboard.F5)
					refreshPage();
			}
			
			private function projectSelectionHandler(projects:Array):void
			{
				projectBar.dataProvider = projects.length > 0 ? projects : null;
			}
			
			private function showPageHandler(page:String):void
			{
				switch(page)
				{
					case ApplicationController.HOME:
						pagesVS.selectedIndex = 0;
						break;
					case ApplicationController.NEW_PROJECT:
						pagesVS.selectedChild = newProject;
						break;
					case ApplicationController.BROWSE_FOR_PROJECT:
						pagesVS.selectedChild = projectBrowser;
						break;
					case ApplicationController.OPEN_PROJECT:
						pagesVS.selectedChild = projectView;
						break;
					case ApplicationController.CODE_GENERATION:
						pagesVS.selectedChild = codeGeneration;
						break;
					case ApplicationController.CONFIG_EDITOR:
						pagesVS.selectedChild = configEditor;
						break;
					case ApplicationController.BACKUP_AND_RESTORE:
						pagesVS.selectedChild = backAndRestore;
						break;
				}
			}
			
			private function setApplicationVersion():void
			{
				var appXML:XML = NativeApplication.nativeApplication.applicationDescriptor;
				var ns:Namespace = appXML.namespace();
				versionStr.text = "Aerial Admin " + appXML.ns::versionNumber +
					" using AIR" + NativeApplication.nativeApplication.runtimeVersion;
			}
			
			private function onUpdate(event:UpdateEvent):void
			{
				appUpdater.checkNow();
			}
			
			private function onError(event:ErrorEvent):void
			{
				Alert.show(event.toString());
			}

			protected function projectSelected(event:ItemClickEvent):void
			{
				appControl.projectDirectory = event.item.data as File;
				appControl.showPage.dispatch(ApplicationController.OPEN_PROJECT);
			}

			protected function projectCloseHandler(event:SuperTabEvent):void
			{
				var directory:File = projectBar.dataProvider.getItemAt(event.tabIndex).data as File;
				if(directory)
					appControl.closeProject(directory);
				
				appControl.showPage.dispatch(ApplicationController.HOME);
			}

			protected function refreshPage():void
			{
				if(appControl.projectDirectory && pagesVS.selectedChild is IRefreshable)
					IRefreshable(pagesVS.selectedChild).init();
			}

		]]>
	</mx:Script>
	
	<mx:Style source="assets/styles/undefined/style.css"/>
</mx:WindowedApplication>